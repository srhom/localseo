jQuery(function () {
  initPopups();
  initTouchNav();
  //initFancybox();
  initOpenClose();

  jQuery(document).on("gform_confirmation_loaded", function (e, form_id) {
    setTimeout(function () {
      $.fancybox.close();
    }, 2000);
  });
});

jQuery(window).on("load", function () {
  initContsctForm();
  ///initCustomMap();
});

// open-close init
function initOpenClose() {
  jQuery("header").openClose({
    activeClass: "opened",
    opener: ".popup_closer, .popup_closer_mobile",
    slider: ".popup_cta_cont",
    animSpeed: 400,
    effect: "slide",
  });
}

// popups init
function initPopups() {
  jQuery(".popup-phone").contentPopup({
    mode: "click",
    popup: ".popup-wrap",
    btnOpen: ".open-phone",
  });
}

jQuery(function () {
  //initFancybox();
});

// lightbox init
// function initFancybox() {
//   jQuery("a.lightbox, [data-fancybox]").fancybox({
//     parentEl: "body",
//     margin: [50, 0],
//   });
// }

/*
 * jQuery Open/Close plugin
 */
(function ($) {
  function OpenClose(options) {
    this.options = $.extend(
      {
        addClassBeforeAnimation: true,
        hideOnClickOutside: false,
        activeClass: "active",
        opener: ".opener",
        slider: ".slide",
        animSpeed: 400,
        effect: "fade",
        event: "click",
      },
      options
    );
    this.init();
  }
  OpenClose.prototype = {
    init: function () {
      if (this.options.holder) {
        this.findElements();
        this.attachEvents();
        this.makeCallback("onInit", this);
      }
    },
    findElements: function () {
      this.holder = $(this.options.holder);
      this.opener = this.holder.find(this.options.opener);
      this.slider = this.holder.find(this.options.slider);
    },
    attachEvents: function () {
      // add handler
      var self = this;
      this.eventHandler = function (e) {
        e.preventDefault();
        if (self.slider.hasClass(slideHiddenClass)) {
          self.showSlide();
        } else {
          self.hideSlide();
        }
      };
      self.opener.on(self.options.event, this.eventHandler);

      // hover mode handler
      if (self.options.event === "hover") {
        self.opener.on("mouseenter", function () {
          if (!self.holder.hasClass(self.options.activeClass)) {
            self.showSlide();
          }
        });
        self.holder.on("mouseleave", function () {
          self.hideSlide();
        });
      }

      // outside click handler
      self.outsideClickHandler = function (e) {
        if (self.options.hideOnClickOutside) {
          var target = $(e.target);
          if (!target.is(self.holder) && !target.closest(self.holder).length) {
            self.hideSlide();
          }
        }
      };

      // set initial styles
      if (this.holder.hasClass(this.options.activeClass)) {
        $(document).on("click touchstart", self.outsideClickHandler);
      } else {
        this.slider.addClass(slideHiddenClass);
      }
    },
    showSlide: function () {
      var self = this;
      if (self.options.addClassBeforeAnimation) {
        self.holder.addClass(self.options.activeClass);
      }
      self.slider.removeClass(slideHiddenClass);
      $(document).on("click touchstart", self.outsideClickHandler);

      self.makeCallback("animStart", true);
      toggleEffects[self.options.effect].show({
        box: self.slider,
        speed: self.options.animSpeed,
        complete: function () {
          if (!self.options.addClassBeforeAnimation) {
            self.holder.addClass(self.options.activeClass);
          }
          self.makeCallback("animEnd", true);
        },
      });
    },
    hideSlide: function () {
      var self = this;
      if (self.options.addClassBeforeAnimation) {
        self.holder.removeClass(self.options.activeClass);
      }
      $(document).off("click touchstart", self.outsideClickHandler);

      self.makeCallback("animStart", false);
      toggleEffects[self.options.effect].hide({
        box: self.slider,
        speed: self.options.animSpeed,
        complete: function () {
          if (!self.options.addClassBeforeAnimation) {
            self.holder.removeClass(self.options.activeClass);
          }
          self.slider.addClass(slideHiddenClass);
          self.makeCallback("animEnd", false);
        },
      });
    },
    destroy: function () {
      this.slider.removeClass(slideHiddenClass).css({
        display: "",
      });
      this.opener.off(this.options.event, this.eventHandler);
      this.holder.removeClass(this.options.activeClass).removeData("OpenClose");
      $(document).off("click touchstart", this.outsideClickHandler);
    },
    makeCallback: function (name) {
      if (typeof this.options[name] === "function") {
        var args = Array.prototype.slice.call(arguments);
        args.shift();
        this.options[name].apply(this, args);
      }
    },
  };

  // add stylesheet for slide on DOMReady
  var slideHiddenClass = "js-slide-hidden";
  (function () {
    var tabStyleSheet = $('<style type="text/css">')[0];
    var tabStyleRule = "." + slideHiddenClass;
    tabStyleRule +=
      "{position:absolute !important;left:-9999px !important;top:-9999px !important;display:block !important}";
    if (tabStyleSheet.styleSheet) {
      tabStyleSheet.styleSheet.cssText = tabStyleRule;
    } else {
      tabStyleSheet.appendChild(document.createTextNode(tabStyleRule));
    }
    $("head").append(tabStyleSheet);
  })();

  // animation effects
  var toggleEffects = {
    slide: {
      show: function (o) {
        o.box.stop(true).hide().slideDown(o.speed, o.complete);
      },
      hide: function (o) {
        o.box.stop(true).slideUp(o.speed, o.complete);
      },
    },
    fade: {
      show: function (o) {
        o.box.stop(true).hide().fadeIn(o.speed, o.complete);
      },
      hide: function (o) {
        o.box.stop(true).fadeOut(o.speed, o.complete);
      },
    },
    none: {
      show: function (o) {
        o.box.hide().show(0, o.complete);
      },
      hide: function (o) {
        o.box.hide(0, o.complete);
      },
    },
  };

  // jQuery plugin interface
  $.fn.openClose = function (opt) {
    var args = Array.prototype.slice.call(arguments);
    var method = args[0];

    return this.each(function () {
      var $holder = jQuery(this);
      var instance = $holder.data("OpenClose");

      if (typeof opt === "object" || typeof opt === "undefined") {
        $holder.data(
          "OpenClose",
          new OpenClose(
            $.extend(
              {
                holder: this,
              },
              opt
            )
          )
        );
      } else if (typeof method === "string" && instance) {
        if (typeof instance[method] === "function") {
          args.shift();
          instance[method].apply(instance, args);
        }
      }
    });
  };
})(jQuery);

function initContsctForm() {
  var activeClass = "active";

  jQuery("#footer-quote-request form, #gform_7, #gform_5, #gform_2").each(
    function () {
      var form = jQuery(this);
      var typeButton = form.find(".contact_method_button");
      var parent = typeButton.siblings(".ginput_container");
      var field = parent.find(":input");

      field.attr("type", "tel").val("");

      typeButton.on("click", function (e) {
        e.preventDefault();
        field.val("");

        typeButton.toggleClass("active");

        if (field.attr("type") === "email") {
          field.attr("type", "tel");
        } else {
          field.attr("type", "email");
        }
      });
    }
  );
}

// handle dropdowns on mobile devices
function initTouchNav() {
  jQuery("#menu-mobile-menu").each(function () {
    new TouchNav({
      navBlock: this,
    });
  });
}

// navigation accesibility module
function TouchNav(opt) {
  this.options = {
    hoverClass: "hover",
    menuItems: "li",
    menuOpener: "a",
    menuDrop: "ul",
    navBlock: null,
  };
  for (var p in opt) {
    if (opt.hasOwnProperty(p)) {
      this.options[p] = opt[p];
    }
  }
  this.init();
}
TouchNav.isActiveOn = function (elem) {
  return elem && elem.touchNavActive;
};
TouchNav.prototype = {
  init: function () {
    if (typeof this.options.navBlock === "string") {
      this.menu = document.getElementById(this.options.navBlock);
    } else if (typeof this.options.navBlock === "object") {
      this.menu = this.options.navBlock;
    }
    if (this.menu) {
      this.addEvents();
    }
  },
  addEvents: function () {
    // attach event handlers
    var self = this;
    var touchEvent =
      (navigator.pointerEnabled && "pointerdown") ||
      (navigator.msPointerEnabled && "MSPointerDown") ||
      (this.isTouchDevice && "touchstart");
    this.menuItems = lib.queryElementsBySelector(
      this.options.menuItems,
      this.menu
    );

    var initMenuItem = function (item) {
      var currentDrop = lib.queryElementsBySelector(
          self.options.menuDrop,
          item
        )[0],
        currentOpener = lib.queryElementsBySelector(
          self.options.menuOpener,
          item
        )[0];

      // only for touch input devices
      if (
        currentDrop &&
        currentOpener &&
        (self.isTouchDevice || self.isPointerDevice)
      ) {
        lib.event.add(
          currentOpener,
          "click",
          lib.bind(self.clickHandler, self)
        );
        lib.event.add(
          currentOpener,
          "mousedown",
          lib.bind(self.mousedownHandler, self)
        );
        lib.event.add(currentOpener, touchEvent, function (e) {
          if (!self.isTouchPointerEvent(e)) {
            self.preventCurrentClick = false;
            return;
          }
          self.touchFlag = true;
          self.currentItem = item;
          self.currentLink = currentOpener;
          self.pressHandler.apply(self, arguments);
        });
      }
      // for desktop computers and touch devices
      jQuery(item).bind("mouseenter", function () {
        if (!self.touchFlag) {
          self.currentItem = item;
          self.mouseoverHandler();
        }
      });
      jQuery(item).bind("mouseleave", function () {
        if (!self.touchFlag) {
          self.currentItem = item;
          self.mouseoutHandler();
        }
      });
      item.touchNavActive = true;
    };

    // addd handlers for all menu items
    for (var i = 0; i < this.menuItems.length; i++) {
      initMenuItem(self.menuItems[i]);
    }

    // hide dropdowns when clicking outside navigation
    if (this.isTouchDevice || this.isPointerDevice) {
      lib.event.add(
        document.documentElement,
        "mousedown",
        lib.bind(this.clickOutsideHandler, this)
      );
      lib.event.add(
        document.documentElement,
        touchEvent,
        lib.bind(this.clickOutsideHandler, this)
      );
    }
  },
  mousedownHandler: function (e) {
    if (this.touchFlag) {
      e.preventDefault();
      this.touchFlag = false;
      this.preventCurrentClick = false;
    }
  },
  mouseoverHandler: function () {
    lib.addClass(this.currentItem, this.options.hoverClass);
    jQuery(this.currentItem).trigger("itemhover");
  },
  mouseoutHandler: function () {
    lib.removeClass(this.currentItem, this.options.hoverClass);
    jQuery(this.currentItem).trigger("itemleave");
  },
  hideActiveDropdown: function () {
    for (var i = 0; i < this.menuItems.length; i++) {
      if (lib.hasClass(this.menuItems[i], this.options.hoverClass)) {
        lib.removeClass(this.menuItems[i], this.options.hoverClass);
        jQuery(this.menuItems[i]).trigger("itemleave");
      }
    }
    this.activeParent = null;
  },
  pressHandler: function (e) {
    // hide previous drop (if active)
    if (this.currentItem !== this.activeParent) {
      if (
        this.activeParent &&
        this.currentItem.parentNode === this.activeParent.parentNode
      ) {
        lib.removeClass(this.activeParent, this.options.hoverClass);
      } else if (!this.isParent(this.activeParent, this.currentLink)) {
        this.hideActiveDropdown();
      }
    }
    // handle current drop
    this.activeParent = this.currentItem;
    if (lib.hasClass(this.currentItem, this.options.hoverClass)) {
      this.preventCurrentClick = false;
    } else {
      e.preventDefault();
      this.preventCurrentClick = true;
      lib.addClass(this.currentItem, this.options.hoverClass);
      jQuery(this.currentItem).trigger("itemhover");
    }
  },
  clickHandler: function (e) {
    // prevent first click on link
    if (this.preventCurrentClick) {
      e.preventDefault();
    }
  },
  clickOutsideHandler: function (event) {
    var e = event.changedTouches ? event.changedTouches[0] : event;
    if (this.activeParent && !this.isParent(this.menu, e.target)) {
      this.hideActiveDropdown();
      this.touchFlag = false;
    }
  },
  isParent: function (parent, child) {
    while (child.parentNode) {
      if (child.parentNode == parent) {
        return true;
      }
      child = child.parentNode;
    }
    return false;
  },
  isTouchPointerEvent: function (e) {
    return (
      e.type.indexOf("touch") > -1 ||
      (navigator.pointerEnabled && e.pointerType === "touch") ||
      (navigator.msPointerEnabled && e.pointerType == e.MSPOINTER_TYPE_TOUCH)
    );
  },
  isPointerDevice: (function () {
    return !!(navigator.pointerEnabled || navigator.msPointerEnabled);
  })(),
  isTouchDevice: (function () {
    return !!(
      "ontouchstart" in window ||
      (window.DocumentTouch && document instanceof DocumentTouch)
    );
  })(),
};

/*
 * Utility module
 */
lib = {
  hasClass: function (el, cls) {
    return el && el.className
      ? el.className.match(new RegExp("(\\s|^)" + cls + "(\\s|$)"))
      : false;
  },
  addClass: function (el, cls) {
    if (el && !this.hasClass(el, cls)) el.className += " " + cls;
  },
  removeClass: function (el, cls) {
    if (el && this.hasClass(el, cls)) {
      el.className = el.className.replace(
        new RegExp("(\\s|^)" + cls + "(\\s|$)"),
        " "
      );
    }
  },
  extend: function (obj) {
    for (var i = 1; i < arguments.length; i++) {
      for (var p in arguments[i]) {
        if (arguments[i].hasOwnProperty(p)) {
          obj[p] = arguments[i][p];
        }
      }
    }
    return obj;
  },
  each: function (obj, callback) {
    var property, len;
    if (typeof obj.length === "number") {
      for (property = 0, len = obj.length; property < len; property++) {
        if (callback.call(obj[property], property, obj[property]) === false) {
          break;
        }
      }
    } else {
      for (property in obj) {
        if (obj.hasOwnProperty(property)) {
          if (callback.call(obj[property], property, obj[property]) === false) {
            break;
          }
        }
      }
    }
  },
  event: (function () {
    var fixEvent = function (e) {
      e = e || window.event;
      if (e.isFixed) return e;
      else e.isFixed = true;
      if (!e.target) e.target = e.srcElement;
      e.preventDefault =
        e.preventDefault ||
        function () {
          this.returnValue = false;
        };
      e.stopPropagation =
        e.stopPropagation ||
        function () {
          this.cancelBubble = true;
        };
      return e;
    };
    return {
      add: function (elem, event, handler) {
        if (!elem.events) {
          elem.events = {};
          elem.handle = function (e) {
            var ret,
              handlers = elem.events[e.type];
            e = fixEvent(e);
            for (var i = 0, len = handlers.length; i < len; i++) {
              if (handlers[i]) {
                ret = handlers[i].call(elem, e);
                if (ret === false) {
                  e.preventDefault();
                  e.stopPropagation();
                }
              }
            }
          };
        }
        if (!elem.events[event]) {
          elem.events[event] = [];
          if (elem.addEventListener)
            elem.addEventListener(event, elem.handle, false);
          else if (elem.attachEvent)
            elem.attachEvent("on" + event, elem.handle);
        }
        elem.events[event].push(handler);
      },
      remove: function (elem, event, handler) {
        var handlers = elem.events[event];
        for (var i = handlers.length - 1; i >= 0; i--) {
          if (handlers[i] === handler) {
            handlers.splice(i, 1);
          }
        }
        if (!handlers.length) {
          delete elem.events[event];
          if (elem.removeEventListener)
            elem.removeEventListener(event, elem.handle, false);
          else if (elem.detachEvent)
            elem.detachEvent("on" + event, elem.handle);
        }
      },
    };
  })(),
  queryElementsBySelector: function (selector, scope) {
    scope = scope || document;
    if (!selector) return [];
    if (selector === ">*") return scope.children;
    if (typeof document.querySelectorAll === "function") {
      return scope.querySelectorAll(selector);
    }
    var selectors = selector.split(",");
    var resultList = [];
    for (var s = 0; s < selectors.length; s++) {
      var currentContext = [scope || document];
      var tokens = selectors[s]
        .replace(/^\s+/, "")
        .replace(/\s+$/, "")
        .split(" ");
      for (var i = 0; i < tokens.length; i++) {
        token = tokens[i].replace(/^\s+/, "").replace(/\s+$/, "");
        if (token.indexOf("#") > -1) {
          var bits = token.split("#"),
            tagName = bits[0],
            id = bits[1];
          var element = document.getElementById(id);
          if (element && tagName && element.nodeName.toLowerCase() != tagName) {
            return [];
          }
          currentContext = element ? [element] : [];
          continue;
        }
        if (token.indexOf(".") > -1) {
          var bits = token.split("."),
            tagName = bits[0] || "*",
            className = bits[1],
            found = [],
            foundCount = 0;
          for (var h = 0; h < currentContext.length; h++) {
            var elements;
            if (tagName == "*") {
              elements = currentContext[h].getElementsByTagName("*");
            } else {
              elements = currentContext[h].getElementsByTagName(tagName);
            }
            for (var j = 0; j < elements.length; j++) {
              found[foundCount++] = elements[j];
            }
          }
          currentContext = [];
          var currentContextIndex = 0;
          for (var k = 0; k < found.length; k++) {
            if (
              found[k].className &&
              found[k].className.match(
                new RegExp("(\\s|^)" + className + "(\\s|$)")
              )
            ) {
              currentContext[currentContextIndex++] = found[k];
            }
          }
          continue;
        }
        if (token.match(/^(\w*)\[(\w+)([=~\|\^\$\*]?)=?"?([^\]"]*)"?\]$/)) {
          var tagName = RegExp.$1 || "*",
            attrName = RegExp.$2,
            attrOperator = RegExp.$3,
            attrValue = RegExp.$4;
          if (
            attrName.toLowerCase() == "for" &&
            this.browser.msie &&
            this.browser.version < 8
          ) {
            attrName = "htmlFor";
          }
          var found = [],
            foundCount = 0;
          for (var h = 0; h < currentContext.length; h++) {
            var elements;
            if (tagName == "*") {
              elements = currentContext[h].getElementsByTagName("*");
            } else {
              elements = currentContext[h].getElementsByTagName(tagName);
            }
            for (var j = 0; elements[j]; j++) {
              found[foundCount++] = elements[j];
            }
          }
          currentContext = [];
          var currentContextIndex = 0,
            checkFunction;
          switch (attrOperator) {
            case "=":
              checkFunction = function (e) {
                return e.getAttribute(attrName) == attrValue;
              };
              break;
            case "~":
              checkFunction = function (e) {
                return e
                  .getAttribute(attrName)
                  .match(new RegExp("(\\s|^)" + attrValue + "(\\s|$)"));
              };
              break;
            case "|":
              checkFunction = function (e) {
                return e
                  .getAttribute(attrName)
                  .match(new RegExp("^" + attrValue + "-?"));
              };
              break;
            case "^":
              checkFunction = function (e) {
                return e.getAttribute(attrName).indexOf(attrValue) == 0;
              };
              break;
            case "$":
              checkFunction = function (e) {
                return (
                  e.getAttribute(attrName).lastIndexOf(attrValue) ==
                  e.getAttribute(attrName).length - attrValue.length
                );
              };
              break;
            case "*":
              checkFunction = function (e) {
                return e.getAttribute(attrName).indexOf(attrValue) > -1;
              };
              break;
            default:
              checkFunction = function (e) {
                return e.getAttribute(attrName);
              };
          }
          currentContext = [];
          var currentContextIndex = 0;
          for (var k = 0; k < found.length; k++) {
            if (checkFunction(found[k])) {
              currentContext[currentContextIndex++] = found[k];
            }
          }
          continue;
        }
        tagName = token;
        var found = [],
          foundCount = 0;
        for (var h = 0; h < currentContext.length; h++) {
          var elements = currentContext[h].getElementsByTagName(tagName);
          for (var j = 0; j < elements.length; j++) {
            found[foundCount++] = elements[j];
          }
        }
        currentContext = found;
      }
      resultList = [].concat(resultList, currentContext);
    }
    return resultList;
  },
  trim: function (str) {
    return str.replace(/^\s+/, "").replace(/\s+$/, "");
  },
  bind: function (f, scope, forceArgs) {
    return function () {
      return f.apply(
        scope,
        typeof forceArgs !== "undefined" ? [forceArgs] : arguments
      );
    };
  },
};

/*
 * Popups plugin
 */
(function ($) {
  function ContentPopup(opt) {
    this.options = $.extend(
      {
        holder: null,
        popup: ".popup",
        btnOpen: ".open",
        btnClose: ".close",
        openClass: "popup-active",
        clickEvent: "click",
        mode: "click",
        hideOnClickLink: true,
        hideOnClickOutside: true,
        delay: 50,
      },
      opt
    );
    if (this.options.holder) {
      this.holder = $(this.options.holder);
      this.init();
    }
  }
  ContentPopup.prototype = {
    init: function () {
      this.findElements();
      this.attachEvents();
    },
    findElements: function () {
      this.popup = this.holder.find(this.options.popup);
      this.btnOpen = this.holder.find(this.options.btnOpen);
      this.btnClose = this.holder.find(this.options.btnClose);
    },
    attachEvents: function () {
      // handle popup openers
      var self = this;
      this.clickMode =
        isTouchDevice || self.options.mode === self.options.clickEvent;

      if (this.clickMode) {
        // handle click mode
        this.btnOpen.bind(self.options.clickEvent + ".popup", function (e) {
          if (self.holder.hasClass(self.options.openClass)) {
            if (self.options.hideOnClickLink) {
              self.hidePopup();
            }
          } else {
            self.showPopup();
          }
          e.preventDefault();
        });

        // prepare outside click handler
        this.outsideClickHandler = this.bind(this.outsideClickHandler, this);
      } else {
        // handle hover mode
        var timer,
          delayedFunc = function (func) {
            clearTimeout(timer);
            timer = setTimeout(function () {
              func.call(self);
            }, self.options.delay);
          };
        this.btnOpen
          .on("mouseover.popup", function () {
            delayedFunc(self.showPopup);
          })
          .on("mouseout.popup", function () {
            delayedFunc(self.hidePopup);
          });
        this.popup
          .on("mouseover.popup", function () {
            delayedFunc(self.showPopup);
          })
          .on("mouseout.popup", function () {
            delayedFunc(self.hidePopup);
          });
      }

      // handle close buttons
      this.btnClose.on(self.options.clickEvent + ".popup", function (e) {
        self.hidePopup();
        e.preventDefault();
      });
    },
    outsideClickHandler: function (e) {
      // hide popup if clicked outside
      var targetNode = $((e.changedTouches ? e.changedTouches[0] : e).target);
      if (
        !targetNode.closest(this.popup).length &&
        !targetNode.closest(this.btnOpen).length
      ) {
        this.hidePopup();
      }
    },
    showPopup: function () {
      // reveal popup
      this.holder.addClass(this.options.openClass);
      this.popup.css({
        display: "block",
      });

      // outside click handler
      if (
        this.clickMode &&
        this.options.hideOnClickOutside &&
        !this.outsideHandlerActive
      ) {
        this.outsideHandlerActive = true;
        $(document).on("click touchstart", this.outsideClickHandler);
      }
    },
    hidePopup: function () {
      // hide popup
      this.holder.removeClass(this.options.openClass);
      this.popup.css({
        display: "none",
      });

      // outside click handler
      if (
        this.clickMode &&
        this.options.hideOnClickOutside &&
        this.outsideHandlerActive
      ) {
        this.outsideHandlerActive = false;
        $(document).off("click touchstart", this.outsideClickHandler);
      }
    },
    bind: function (f, scope, forceArgs) {
      return function () {
        return f.apply(scope, forceArgs ? [forceArgs] : arguments);
      };
    },
    destroy: function () {
      this.popup.removeAttr("style");
      this.holder.removeClass(this.options.openClass);
      this.btnOpen.add(this.btnClose).add(this.popup).off(".popup");
      $(document).off("click touchstart", this.outsideClickHandler);
    },
  };

  // detect touch devices
  var isTouchDevice =
    /Windows Phone/.test(navigator.userAgent) ||
    "ontouchstart" in window ||
    (window.DocumentTouch && document instanceof DocumentTouch);

  // jQuery plugin interface
  $.fn.contentPopup = function (opt) {
    var args = Array.prototype.slice.call(arguments);
    var method = args[0];

    return this.each(function () {
      var $holder = jQuery(this);
      var instance = $holder.data("ContentPopup");

      if (typeof opt === "object" || typeof opt === "undefined") {
        $holder.data(
          "ContentPopup",
          new ContentPopup(
            $.extend(
              {
                holder: this,
              },
              opt
            )
          )
        );
      } else if (typeof method === "string" && instance) {
        if (typeof instance[method] === "function") {
          args.shift();
          instance[method].apply(instance, args);
        }
      }
    });
  };
})(jQuery);

$(document).ready(function () {
  //HELPER FUNCTIONS
  function outerHeights(elem) {
    const curStyle = elem.currentStyle || window.getComputedStyle(elem);
    outerHeight = elem.offsetHeight;
    outerHeight += parseInt(curStyle.marginTop);
    outerHeight += parseInt(curStyle.marginBottom);

    return outerHeight;
  }

  function toggleBodyLock() {
    $("body").toggleClass("body_locked");
  }

  $(".support_form_open").click(function () {
    $(".support_form_cont").addClass("form_opened");
    $(".support.intro_copy").addClass("form_opened");
    $("#support-numbers").addClass("form_opened");
  });
  $(".support_form_close").click(function () {
    $(".support_form_cont").removeClass("form_opened");
    $(".support.intro_copy").removeClass("form_opened");
    $("#support-numbers").removeClass("form_opened");
  });

  $(".noEnterSubmit").keypress(function (e) {
    if (e.which == 13) return false;
  });

  $("#field_7_3 .gfield_label .gfield_required").parent().remove();
  $("#input_1_3").attr("type", "email");

  // ADDING CLASS TO THE VISIBLE ELEMENTS
  $("section").on("inview", function (event, isInView) {
    if (isInView) {
      $(this).addClass("in-view");
      // var fadeElements = $(this).find(".edge-fade");
      // $(fadeElements).each(function () {
      //   $(this).addClass("in-view");
      // });
    } else {
      $(this).removeClass("in-view");
    }
  });
  //PRICING CARD MOBILE SLIDING
  /*
	let count = 0;
		if($(window).outerWidth() < 481){
			let cardSelect = document.getElementsByClassName("active");
			let colHeightInit = outerHeights(cardSelect[0]);
			let info = document.getElementsByClassName("card_disclaimer_copy");
			info[0].style.marginTop = colHeightInit + "px";
		}
	function changeCard(increment){
		
		const cards = document.getElementsByClassName('pricing_card');
		const activeCard = document.getElementsByClassName("active");
		activeCard[0].classList.remove("active");
		if(count + increment < 0){
			count = cards.length - 1;
		} else if( count + increment > cards.length - 1 ){
			count = 0;
		} else {
			count += increment;
		}
		cards[count].classList.add('active');
		
		const colHeight = outerHeights(cards[count]);
		const col =  document.getElementById("pricing_cards_container");
		
		let info = document.getElementsByClassName("card_disclaimer_copy");
		info[0].style.marginTop = colHeight + "px";
		console.log(count);
	}
	const prevCard = document.getElementById("prevCard");
	const nextCard = document.getElementById("nextCard");
	prevCard.addEventListener("click", function(){
		changeCard(-1);
	});
	nextCard.addEventListener("click", function(){
		changeCard(1);
	});
*/

  //LOGIN BUTTON HANDLING
  function loginDropDown() {
    const loginCont = document.getElementById("login_container");
    const loginOverlay = document.getElementById("login_overlay");

    if ($(window).outerWidth() < 769) {
      if (!bool) {
        toggleBodyLock();
        loginCont.style.transform = "translateY(100vh)";
        $("header").css("transform", "translateY(100vh)");
        $(".logo").css("transform", "translateY(100vh)");
        bool = true;
      } else if (bool) {
        toggleBodyLock();
        $("header").css("transform", "translateY(0)");
        $(".logo").css("transform", "translateY(0)");
        loginCont.style.transform = "translateY(0)";
        bool = false;
      }
    } else {
      if (!bool) {
        toggleBodyLock();
        loginCont.style.transform = "translateY(100vh)";
        $("header").css("transform", "translateY(100vh)");
        $(".logo").css("transform", "translateY(100vh)");
        bool = true;
      } else if (bool) {
        toggleBodyLock();
        $("header").css("transform", "translateY(0)");
        $(".logo").css("transform", "translateY(0)");
        loginCont.style.transform = "translateY(0)";
        bool = false;
      }
    }
  }

  // Turned off login drop-down
  jQuery(".loginButton").on("click", function (e) {
    e.preventDefault();
    //loginDropDown();
    location.href = "/myalert360";
  });

  // const closeLogin = document.getElementById("loginCloser");
  // const loginOverlay = document.getElementById("login_overlay");
  // const loginBottom = document.getElementsByClassName("page_content")[0];
  // let bool = false;
  // closeLogin.addEventListener("click", loginDropDown);
  // loginOverlay.addEventListener("click", loginDropDown);

  //POPUP CTA VARIABLES
  let ctaIsOpen = false;

  //POPUP CTA HANDLING FUNCTION
  /*let ctaHandler = function(){
		
		setTimeout(function(){
			$('.popup_cta_cont').addClass("movedUp");
		}, 500);
		ctaIsOpen = true;
	}
	$(".popup_closer_mobile").on("click", function(){
		$(".popup_cta_cont").removeClass("movedUp");
		ctaIsOpen = false;
	});
		
	$(".popup_closer").on("click", function(){
		$(".popup_cta_cont").removeClass("movedUp");
		ctaIsOpen = false;
		$("#ctaOpener").addClass("visible").removeClass("hidden");
	});	
	$("#ctaOpener").on("click", function(){
		$(this).addClass("hidden").removeClass("visible");
		$(".popup_cta_cont").addClass("movedUp");
	})*/
  // PAGE TRANSITION REMOVE
  $(window).on("load", function () {
    $(".page-transition").hide();
  });

  // SMOOTH SCROLLING

  // Select all links with hashes
  $('a[href*="#"]')
    // Remove links that don't actually link to anything
    .not('[href="#"]')
    .not('[href="#0"]')
    .not('[href="#phone_slider"]')
    .not('[data-toggle="collapse"]')
    .click(function (event) {
      // On-page links
      if (
        location.pathname.replace(/^\//, "") ==
          this.pathname.replace(/^\//, "") &&
        location.hostname == this.hostname
      ) {
        // Figure out element to scroll to
        var target = $(this.hash);
        target = target.length
          ? target
          : $("[name=" + this.hash.slice(1) + "]");
        // Does a scroll target exist?
        if (target.length) {
          // Only prevent default if animation is actually gonna happen
          event.preventDefault();
          $("html, body").animate(
            {
              scrollTop: target.offset().top, //  + (-116)
            },
            1000,
            function () {
              // Callback after animation
              // Must change focus!
              var $target = $(target);
              $target.focus();
              if ($target.is(":focus")) {
                // Checking if the target was focused
                return false;
              } else {
                $target.attr("tabindex", "-1"); // Adding tabindex for elements not focusable
                $target.focus(); // Set focus again
              }
            }
          );
        }
      }
    });

  //MAKING LOGO SMALLER ON SCROLL
  function logoShrink() {
    scrolledDown = true;
    $(".logo svg").animate({ width: 75, height: 75 });
  }
  function logoGrow() {
    scrolledDown = false;
    $(".logo svg").animate({ width: 130, height: 130 });
  }
  var scrolledDown = false;
  const isProductPage = $("body").hasClass("post-type-archive-s8products"),
    isLocationPage = $("body").hasClass("post-type-archive-s8locations");
  isSingleLocationPage = $("body").hasClass("single-s8locations");

  $(window).scroll(function () {
    var scroll = $(window).scrollTop();
    // if ($(window).width() > 767) {
    // 	if(scroll > 0 && !scrolledDown) {
    //   		if(!isProductPage && !isLocationPage && !isSingleLocationPage){
    //     		logoShrink();
    //   		}
    // 	} else if(scroll <= 0 && scrolledDown){
    // 		if(!isProductPage && !isLocationPage && !isSingleLocationPage){
    // 			logoGrow();
    // 		}
    // 	}
    // }
    //CHANGE CTA POSITION
    const offset = $("#three_column").length
      ? $("#three_column").offset().top
      : 0;
    const scrollBottom = $(window).scrollTop() + $(window).height() * 0.5;

    $(window).scroll(function () {
      if (ctaIsOpen) {
        if (scrollBottom >= offset) {
          $(".popup_cta_cont").hide();
        }
      }
    });
  });

  // HOMEPAGE TOGGLE BETWEEN HOME AND BUSINESS
  $("#business_switch").on("click", function () {
    $("#home_security_slide").css("opacity", "0");
    $("#business_security_slide").css("opacity", "1");
    $("#home_switch").removeClass("active");
    $("#business_switch").addClass("active");
  });
  $("#home_switch").on("click", function () {
    $("#business_security_slide").css("opacity", "0");
    $("#home_security_slide").css("opacity", "1");
    $("#business_switch").removeClass("active");
    $("#home_switch").addClass("active");
  });

  // MENU BURGER
  $(".burger").on("click", function () {
    $(".menu-mobile-menu-container").toggleClass("menuopen");
  });

  /*
	
	//ABOVE CONTENT TOGGLE
	$('.um_contact').on('click', function(){
		$('.abovecontent').toggleClass('active');
		$('body').toggleClass('locked');
		$('.quick_contact_form').show();
	});	
	$('.um_account').on('click', function(){
		$('.abovecontent').toggleClass('active');
		$('.links').css({'display': 'flex'});
	});
	$('.mim_account').on('click', function(){
		$('.abovecontent').toggleClass('active');
		$('body').toggleClass('locked');
		$('.links').css({'display': 'flex'});
	});		
	$('.close_above_content').on('click', function(){
		$('.abovecontent').toggleClass('active');
		$('body').toggleClass('locked');
		$('.quick_contact_form').hide();
		$('.links').css({'display': 'none'});
	});	
	
*/

  // FATNAV toggles
  // $(".home_fat_open").on("click", function () {
  //   if ($(window).outerWidth() < 769) {
  //     toggleBodyLock();
  //   }
  //   if ($(this).hasClass("current-menu-item")) {
  //     $("#home_security_nav").toggleClass("fatnav_open");
  //     $(".after_fatnav").toggleClass("after_fatnav_open");
  //     $(".menu-mobile-menu-container").toggleClass("menuopen");
  //     $("#menu-main-menu li").removeClass("current-menu-item");
  //     $(this).toggleClass("current-menu-item");
  //   } else {
  //     $(".fatnav").removeClass("fatnav_open");
  //     $(".after_fatnav").toggleClass("after_fatnav_open");
  //     $("#home_security_nav").addClass("fatnav_open");
  //     $(".menu-mobile-menu-container").toggleClass("menuopen");
  //     $("#menu-main-menu li").removeClass("current-menu-item");
  //     $(this).toggleClass("current-menu-item");
  //   }
  // });

  /*
	$('.home_fat_open').on('click', function(){
		if($(window).outerWidth() < 769){
			toggleBodyLock();
		}
		$('.fatnav').removeClass('fatnav_open');
		$('#home_security_nav').toggleClass('fatnav_open');
		$('.after_fatnav').addClass('after_fatnav_open');
		$('.menu-mobile-menu-container').toggleClass('menuopen');
		$('#menu-main-menu li').removeClass('current-menu-item');
		$('#menu-item-56').addClass('current-menu-item');
	});
*/

  $(".bus_fat_open").on("click", function () {
    if ($(window).outerWidth() < 769) {
      toggleBodyLock();
    }
    if ($(this).hasClass("current-menu-item")) {
      $("#business_security_nav").toggleClass("fatnav_open");
      $(".after_fatnav").toggleClass("after_fatnav_open");
      $(".menu-mobile-menu-container").toggleClass("menuopen");
      $("#menu-main-menu li").removeClass("current-menu-item");
      $(this).toggleClass("current-menu-item");
    } else {
      $(".fatnav").removeClass("fatnav_open");
      $(".after_fatnav").toggleClass("after_fatnav_open");
      $("#business_security_nav").addClass("fatnav_open");
      $(".menu-mobile-menu-container").toggleClass("menuopen");
      $("#menu-main-menu li").removeClass("current-menu-item");
      $(this).toggleClass("current-menu-item");
    }
  });
  $(".after_fatnav").on("click", function () {
    $(this).removeClass("after_fatnav_open");
    $(".fatnav").removeClass("fatnav_open");
    $("#menu-main-menu li").removeClass("current-menu-item");
  });

  // PRODUCT IMAGE HEIGHTS
  //h = $('.a360product_image img').width();
  //$('.a360product_image img').height(h);

  // CHECKBOX CHECKED STYLE CHANGE IN FILTER SIDEBARS
  $("#prd_fil_sidebar input").change(function () {
    var c = this.checked ? "#00964d" : "#000603";
    var d = this.checked ? "700" : "400";
    $(this).next().css({ color: c, "font-weight": d });
  });

  //CHECKBOX CHECKED EXTENDED FORM
  $("#input_21_4 input").change(function () {
    var c = this.checked ? "#fff" : "#000603";
    var d = this.checked ? "#00964d" : "#FFF";
    $(this).parent().css({ color: c, "background-color": d });
  });

  //ADDING EMAIL OR PHONE BUTTONS FOR THE CONTACT FORMS AND SWITCHING BETWEEN THEM ON CLICK
  var contactmethod =
    '<img src="/wp-content/uploads/2018/01/form_phone.svg" alt="contact via phone" class="contact_method_button active"><img src="/wp-content/uploads/2018/01/form_email.svg" alt="contact via email" class="contact_method_button">';

  $("#field_5_3").prepend(contactmethod);
  $("#field_2_3").prepend(contactmethod);
  $("#field_1_3").prepend(contactmethod);
  $("#field_7_4").prepend(contactmethod);

  //OPENING FAQ WHEN SEE ALL CLICKED
  $(".after").on("click", function () {
    $(this).hide();
    $(".response.active").height("auto");
  });

  //PACKAGE ROTATOR IN MOBILE
  $(".package_rotator div").on("click", function () {
    $(".package_rotator div").removeClass("active");
    $(this).addClass("active");
    var id = $(this).attr("id");
    var idlast = id.slice(-1);
    var idpack = "pck_" + idlast;
    $(".package_content").removeClass("active");
    $("#" + idpack).addClass("active");
  });

  //FILTERS in MOBILE
  $("#filter_icon").on("click", function () {
    $(".filter_sidebar").toggleClass("opened");
  });

  //POSITION CHANGE
  $(".slidehome").on("click", function () {
    $(".slidehome").removeClass("active");
    $(this).addClass("active");

    pos = $(this).attr("data-pos");
    if (pos == 1) {
      $(".slider360").css({ transform: "translateX(-175px) rotate(135deg)" });
      $(".slidehome").css({ transform: "rotate(-135deg)" });
      $(".slidehome:nth-child(1) img").css({
        "margin-left": "0",
        "margin-top": "0",
      });
      $(".slidehome:nth-child(2) img").css({
        "margin-top": "-72px",
        "margin-left": "0",
      });
      $(".slidehome:nth-child(3) img").css({
        "margin-top": "72px",
        "margin-left": "0",
      });
      $(".slidehome:nth-child(4) img").css({
        "margin-left": "-144px",
        "margin-top": "0",
      });
    }
    if (pos == 2) {
      $(".slider360").css({ transform: "translateX(-175px) rotate(405deg)" });
      $(".slidehome").css({ transform: "rotate(-405deg)" });
      $(".slidehome:nth-child(1) img").css({
        "margin-top": "72px",
        "margin-left": "0",
      });
      $(".slidehome:nth-child(2) img").css({
        "margin-left": "0",
        "margin-top": "0",
      });
      $(".slidehome:nth-child(3) img").css({
        "margin-left": "-144px",
        "margin-top": "0",
      });
      $(".slidehome:nth-child(4) img").css({
        "margin-top": "-72px",
        "margin-left": "0",
      });
    }
    if (pos == 3) {
      $(".slider360").css({ transform: "translateX(-175px) rotate(225deg)" });
      $(".slidehome").css({ transform: "rotate(-225deg)" });
      $(".slidehome:nth-child(1) img").css({
        "margin-top": "-72px",
        "margin-left": "0",
      });
      $(".slidehome:nth-child(2) img").css({
        "margin-left": "-144px",
        "margin-top": "0",
      });
      $(".slidehome:nth-child(3) img").css({
        "margin-left": "0",
        "margin-top": "0",
      });
      $(".slidehome:nth-child(4) img").css({
        "margin-top": "72px",
        "margin-left": "0",
      });
    }
    if (pos == 4) {
      $(".slider360").css({ transform: "translateX(-175px) rotate(315deg)" });
      $(".slidehome").css({ transform: "rotate(-315deg)" });
      $(".slidehome:nth-child(1) img").css({
        "margin-left": "-144px",
        "margin-top": "0",
      });
      $(".slidehome:nth-child(2) img").css({
        "margin-top": "72px",
        "margin-left": "0",
      });
      $(".slidehome:nth-child(3) img").css({
        "margin-top": "-72px",
        "margin-left": "0",
      });
      $(".slidehome:nth-child(4) img").css({
        "margin-left": "0",
        "margin-top": "0",
      });
    }
  });

  /*
	
	$(function() {
	    var lis = $(".testimonial"),
	        currentHighlight = 0;
	        N = 10000;//interval in seconds
	    setInterval(function() {
	        currentHighlight = (currentHighlight + 1) % lis.length;
	        lis.removeClass('active').eq(currentHighlight).addClass('active');
	    }, N);
	});
*/

//   $(".tst_slider").slick({
//     infinite: true,
//     slidesToShow: 3,
//     slidesToScroll: 3,
//     arrows: false,
//     responsive: [
//       {
//         breakpoint: 769,
//         settings: {
//           slidesToShow: 1,
//           slidesToScroll: 1,
//           adaptiveHeight: true,
//         },
//       },
//     ],
//   });
//   $(".next_tst").on("click", function () {
//     $(".tst_slider").slick("slickNext");
//   });
//   $(".prev_tst").on("click", function () {
//     $(".tst_slider").slick("slickPrev");
//   });

  //---------------PRODUCT IMAGES
  $(".secondary_images li img").on("click", function () {
    src = $(this).attr("prd-img-id");
    $(".product_image img").attr("src", src);
    $(".secondary_images li").removeClass("active");
    $(this).parent().addClass("active");
  });

  //---------------PRODUCT GRID IMAGES
  $(".secondary_images li img").on("click", function () {
    src = $(this).attr("grid-prd-img-id");
    $(this)
      .parent()
      .parent()
      .siblings(".product_image")
      .find("img")
      .attr("src", src);
    $(".secondary_images li").removeClass("active");
    $(this).parent().addClass("active");
  });

  //---------------CHECK "ALL" ON FAQ
  $("#sup_fil_sidebar fieldset input:nth-child(2)").prop("checked", true);
});

//---------------mobile menu with CTA and Alert bar
jQuery(window).on("load", function () {
  var ctaHeight = $(".popup_cta_cont").outerHeight();
  var alertHeight = $(".web-alert").outerHeight();
  var viewportWidth = $(window).width();
  // var menuTop = $('.menu-mobile-menu-container').position().top; var
  // totalHeight = alertHeight + ctaHeight; if CTA top is visible
  if ($(".popup_cta_cont").is(":visible")) {
    // alter mobile nav top
    $(".menu-mobile-menu-container").css("top", 58 + ctaHeight + "px");

    $("header.opened ~ .intro").css("margin-top", "88px");
    $(".fatnav").css("top", "170px");

    $(".popup_closer").click(function () {
      // alter mobile nav top
      $(".menu-mobile-menu-container").css("top", "58px");
      $(".intro").css("margin-top", "34px");
      $(".fatnav").css("top", "110px");
    });

    $(".popup_closer_mobile").click(function () {
      $(".menu-mobile-menu-container").css("top", "58px");
    });
  }

  // if CTA and alert top is visible
  if ($(".web-alert").is(":visible") && $(".popup_cta_cont").is(":visible")) {
    // alter mobile nav top
    $(".menu-mobile-menu-container").css(
      "top",
      58 + (alertHeight + ctaHeight) + "px"
    );

    $(".popup_closer").click(function () {
      // alter mobile nav top
      $(".menu-mobile-menu-container").css("top", 58 + alertHeight + "px");
    });

    $(".popup_closer_mobile").click(function () {
      $(".menu-mobile-menu-container").css("top", 58 + alertHeight + "px");
    });
  }

  if ($(".popup_cta_cont").is(":visible") && viewportWidth < 1112) {
    $(".intro").css("margin-top", "34px");
    $(".fatnav").css("top", "110px");
  }

  // console.log ("menuTop is:" + menuTop); console.log ("alertHeight is:" +
  // alertHeight); console.log ("ctaHeight is:" + ctaHeight); console.log
  // ("totalHeight is:" + totalHeight);
});


jQuery(function ($) {
  var $window = $(window);
  var $buttonTop = $(".button-top");
  var scrollTimer;

  $buttonTop.on("click", function () {
    $("html, body").animate(
      {
        scrollTop: 0,
      },
      400
    );
  });
});

$(window).on("scroll", function () {
  var scrollPos = $(window).scrollTop();
  if (scrollPos >= 400) {
    $(".button-top").fadeIn();
  } else {
    $(".button-top").fadeOut();
  }
});

$(".package_select").click(function () {
  var package = this.getAttribute("data-value");
  $("#input_21_13").val(package);
  //console.log(package);
});

// Suburb page columns
$(document).ready(function () {
  if ($(window).width() > 768) {
    $(".two_col_bg_col").each(function () {
      $(this).css({
        height: $(this).parent().parent().parent().height() + "px",
      });
    });
    $(".two_col_copy_col").each(function () {
      $(this).css({
        height: $(this).parent().parent().parent().height() + "px",
      });
    });
  }
});

// Business page columns
$(document).ready(function () {
  if ($(window).width() > 768) {
    $("#five-diamond").each(function () {
      $(this).css({ height: $("#business-monitoring").height() + "px" });
    });
    $("#business-dome").each(function () {
      $(this).css({ height: $("#business-video").height() + "px" });
    });
  }
});

// Residential page columns
$(document).ready(function () {
  if ($(window).width() > 768) {
    $("#five-diamond").each(function () {
      $(this).css({ height: $("#residential-monitoring").height() + "px" });
    });
    $("#residential-dome").each(function () {
      $(this).css({ height: $("#residential-video").height() + "px" });
    });

    $("#res-security").each(function () {
      $(this).css({ height: $("#residential-security").height() + "px" });
    });

    $("#res-dome").each(function () {
      $(this).css({ height: $("#residential-reporting").height() + "px" });
    });

    $("#res-connected").each(function () {
      $(this).css({ height: $("#residential-management").height() + "px" });
    });
  }
});

// Contact page response box
// $(document).ready(function() {
// 	$('#response001:empty').parent().css('display', 'none');
// });

var delay = (function () {
  var timer = 0;
  return function (callback, ms) {
    clearTimeout(timer);
    timer = setTimeout(callback, ms);
  };
})();

$("#input_22_4").keyup(function () {
  delay(function () {
    var formName = $("#input_22_4").val();
    $("#response001").html(
      "<h4><strong>Hello " +
        formName +
        "<strong>. <br />You are off to a good start!</h4>"
    );
    $("#response001").parent().css("display", "block");
    //console.log(formName);
  }, 1000);
});

$("#input_22_7").keyup(function () {
  delay(function () {
    $("#response002").html(
      "<h5>You are about to save up to 25% off retail!</h5>"
    );
  }, 1000);
});

$("#input_22_9").keyup(function () {
  delay(function () {
    $("#response003").html(
      "<h5>We know you'll LOVE your new security system.</h5><h5>Hit submit to get started today!</h5>"
    );
  }, 1000);
});

//Video player modal
$("#videoModal001").on("shown.bs.modal", function () {
  $("#videoModal001 video")[0].play();
});

$("#videoModal001").on("hidden.bs.modal", function () {
  $("#videoModal001 video")[0].pause();
});

$("#videoModal002").on("shown.bs.modal", function () {
  $("#videoModal002 video")[0].play();
});

$("#videoModal002").on("hidden.bs.modal", function () {
  $("#videoModal002 video")[0].pause();
});


//Alert banner closer
jQuery(function ($) {
  $("#alert_closer").click(function () {
    $(".web-alert").hide();
    $.cookie("closeAlert", "1", { expires: 7, path: "/" });
  });
});

jQuery(function ($) {
  $("#alert_closer_mobile").click(function () {
    $(".web-alert").hide();
    $.cookie("closeAlert", "1", { expires: 7, path: "/" });
  });

  $("#alert_closer_mobile").click(function () {
    // alter mobile nav top
    $("#hp_banner").css("margin-top", 0 + "px");
  });
});

$(document).ready(function () {
  var alertWindowCookie = $.cookie("closeAlert");
  if (alertWindowCookie != null) {
    $(".web-alert").hide();
    $(".web-alert").css("height", 0 + "px");
    $("#hp_banner").css("margin-top", 0 + "px");
  }
});

$(document).on("ready", function () {
  $(".regular").slick({
    dots: false,
    infinite: true,
    lazyLoad: "ondemand", // ondemand progressive anticipated
    slidesToShow: 3,
    slidesToScroll: 1,
    autoplay: true,
    autoplaySpeed: 5000,
    arrows: false,
  });
});

$(document).on("ready", function () {
  $(".regular-002").slick({
    dots: false,
    infinite: true,
    lazyLoad: "ondemand", // ondemand progressive anticipated
    slidesToShow: 3,
    slidesToScroll: 1,
    autoplay: true,
    autoplaySpeed: 5000,
    arrows: false,
  });
});

$(document).on("ready", function () {
  $(".tech-001").slick({
    dots: false,
    infinite: true,
    lazyLoad: "ondemand", // ondemand progressive anticipated
    slidesToShow: 1,
    slidesToScroll: 1,
    autoplay: true,
    autoplaySpeed: 7000,
    arrows: false,
    fade: true,
    speed: 700,
    cssEase: "ease-in-out",
  });
});

$(document).on("ready", function () {
  $(".smb-001").slick({
    dots: false,
    infinite: true,
    lazyLoad: "ondemand", // ondemand progressive anticipated
    slidesToShow: 1,
    slidesToScroll: 1,
    autoplay: true,
    autoplaySpeed: 7000,
    arrows: true,
    prevArrow: $(".prev"),
    nextArrow: $(".next"),
    fade: true,
    speed: 700,
    cssEase: "ease-in-out",
  });
});

// Facebook tracking code -->
$(document).ready(function () {
  $(".fbclid input[type=text]").attr("ID", "fbtracking");

  function setCookie(name, value, days) {
    var date = new Date();
    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
    var expires = "; expires=" + date.toGMTString();
    //document.cookie = name + "=" + value + expires;
    document.cookie = name + "=" + value + expires + ";path=/";
  }
  function getParam(p) {
    var match = RegExp("[?&]" + p + "=([^&]*)").exec(window.location.search);
    return match && decodeURIComponent(match[1].replace(/\+/g, " "));
  }
  var fbclid = getParam("fbclid");
  if (fbclid) {
    var gclsrc = getParam("gclsrc");
    if (!gclsrc || gclsrc.indexOf("aw") !== -1) {
      setCookie("fbclid", fbclid, 90);
    }
  }

  getFBclid();
});

function getFBclid() {
  if ($("#fbtracking").length != 0) {
    $("#fbtracking").val($.cookie("fbclid"));
    //var fbcode002 = $("#fbtracking").val();
    //console.log(fbcode002);
  }
  if ($.cookie("fbclid") != null) {
    $("#input_33_20").val("Web-Facebook");
    //var fbcode = $("#input_33_20").val();
    //console.log(fbcode + " test");
  }
}

//myalert login promo
$(document).ready(function () {
  if ($(window).width() > 768) {
    var loginPromo = $("#myalertLogin").outerHeight();
    $(".promo-1").css("height", loginPromo / 2 + "px");
    $(".promo-2").css("height", loginPromo / 2 + "px");
  }
});

//Track salespro sales
$(document).ready(function () {
  var ref = window.location.pathname;
  var n;
  //console.log(ref);
  if ((n = ref.includes("mysalespro"))) {
    function setCookie(name, value, days) {
      var date = new Date();
      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
      var expires = "; expires=" + date.toGMTString();
      document.cookie = name + "=" + value + expires + ";path=/";
    }
    ref = ref.replace("/mysalespro/", "");
    ref = ref.replace("/", "");
    ref = ref.replace("-", " ");
    ref = ref.toLowerCase().replace(/\b[a-z]/g, function (letter) {
      return letter.toUpperCase();
    });
    setCookie("mysalespro", ref, 30);
    console.log(ref);
  }
  if ((n = ref.includes("contact"))) {
    getMySalesPro();
  }
});

function getMySalesPro() {
  if ($.cookie("mysalespro") != null) {
    proRef = $.cookie("mysalespro");
    $("#input_33_20").val("SGN - My Sales Pro");
    $("#input_33_25").val(proRef);
    var refcode = $("#input_33_20").val();
    var refname = $("#input_33_25").val();
    console.log(refcode);
    console.log(refname);
  }
}

//Track local pages sales
$(document).ready(function () {
  var ref = window.location.pathname;
  var n;
  //console.log(ref);
  if ((n = ref.includes("-home-security"))) {
    function setCookie(name, value, days) {
      var date = new Date();
      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
      var expires = "; expires=" + date.toGMTString();
      document.cookie = name + "=" + value + expires + ";path=/;domain=alert360.com";
    }
    //ref = ref.replace("a360-local:", "");
    ref = ref.replace("-home-security", "");
    ref = ref.replace("/", " ");
    ref = ref.replace("-", " ");
    ref = ref.toLowerCase().replace(/\b[a-z]/g, function (letter) {
      return letter.toUpperCase();
    });
    setCookie("local_pages", ref, 30);
    console.log(ref);
  }
  if ((n = ref.includes("contact"))) {
    getLocalPages();
  }
});

function getLocalPages() {
  if ($.cookie("local_pages") != null) {
    localRef = $.cookie("local_pages");
    $("#input_33_20").val("WEB - Local Pages - " + localRef);
    var localRef = $("#input_33_20").val();
    console.log(localRef);
  }
}

//Track ADC pages sales
$(document).ready(function () {
  var ref = window.location.pathname;
  var n;
  //console.log(ref);
  if ((n = ref.includes("/adc-packages"))) {
    function setCookie(name, value, days) {
      var date = new Date();
      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
      var expires = "; expires=" + date.toGMTString();
      document.cookie = name + "=" + value + expires + ";path=/";
    }
    //ref = ref.replace("/local/", "");
    //ref = ref.replace("/adc-packages", "");
    ref = ref.replace("/", " ");
    ref = ref.replace("-", " ");
    ref = ref.toLowerCase().replace(/\b[a-z]/g, function (letter) {
      return letter.toUpperCase();
    });
    setCookie("adc_packages", ref, 30);
    console.log(ref);
  }
  if ((n = ref.includes("contact"))) {
    getADCPages();
  }
});

function getADCPages() {
  if ($.cookie("adc_packages") != null) {
    localRef = $.cookie("adc_packages");
    $("#input_33_20").val("WEB - ADC Packages Page");
    var localRef = $("#input_33_20").val();
    console.log(localRef);
  }
}

//Track flex 360
$(document).ready(function () {
  var ref = window.location.pathname;
  var n;
  //console.log(ref);
  if ((n = ref.includes("/flex-360"))) {
    function setCookie(name, value, days) {
      var date = new Date();
      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
      var expires = "; expires=" + date.toGMTString();
      document.cookie = name + "=" + value + expires + ";path=/";
    }
    //ref = ref.replace("/local/", "");
    //ref = ref.replace("/adc-packages", "");
    ref = ref.replace("/", " ");
    ref = ref.replace("-", " ");
    ref = ref.toLowerCase().replace(/\b[a-z]/g, function (letter) {
      return letter.toUpperCase();
    });
    setCookie("flex360", ref, 30);
    console.log(ref);
  }
  if ((n = ref.includes("contact"))) {
    getFlex360();
  }
});

function getFlex360() {
  if ($.cookie("flex360") != null) {
    localRef = $.cookie("flex360");
    $("#input_33_20").val("WEB - Flex360");
    var localRef = $("#input_33_20").val();
    console.log(localRef);
  }
}

// Fading promo offers banner

$(function () {
  //this sets an infinite timer that launches the function after
  //5 seconds, and keeps doing it every 8 seconds infinitely.
  setInterval(TogglePanels, 8000);
});

function TogglePanels() {
  var $first;
  var $second;
  //check which one is visible, to fade it out first:
  if ($(".switch_up").is(":visible")) {
    $first = $(".switch_up");
    $second = $(".switch_up2");
  } else {
    $first = $(".switch_up2");
    $second = $(".switch_up");
  }

  //fade out the visible panel
  $first.fadeToggle("slow", function () {
    //this is a callback function that runs when the fading is complete.
    //fade in the invisible panel
    $second.fadeToggle("slow");
  });
}

